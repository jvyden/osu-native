name: Build (Native)

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build-desktop:
    name: Build (Desktop)
    runs-on: ${{ matrix.config.runner }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { runner: windows-latest, platform: win-x86,     ext: dll }
          - { runner: windows-latest, platform: win-x64,     ext: dll }
          - { runner: windows-latest, platform: win-arm64,   ext: dll }
          - { runner: ubuntu-latest,  platform: linux-x64,   ext: so }
          # Likely needs QEMU:
          # - { runner: ubuntu-latest,  platform: linux-arm64, ext: so }
          - { runner: macos-latest,   platform: osx-x64,     ext: dylib }
          - { runner: macos-latest,   platform: osx-arm64,   ext: dylib }
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x
          dotnet-quality: 'daily'

      - name: Build
        run: dotnet publish -c Release -r ${{ matrix.config.platform }} --self-contained Sources/osu.Native/osu.Native.csproj

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.platform }}
          path: Sources/osu.Native/bin/Release/${{ matrix.config.platform }}/publish/osu.Native.${{ matrix.config.ext }}

  pack-cs:
    name: Pack (C#)
    needs: build-desktop
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Add win-x86
        uses: actions/download-artifact@v4
        with:
          name: win-x86
          path: Bindings/CSharp/osu.Native.Bindings/runtimes/win-x86/native/osu.Native.dll

      - name: Add win-x64
        uses: actions/download-artifact@v4
        with:
          name: win-x64
          path: Bindings/CSharp/osu.Native.Bindings/runtimes/win-x64/native/osu.Native.dll

      - name: Add win-arm64
        uses: actions/download-artifact@v4
        with:
          name: win-arm64
          path: Bindings/CSharp/osu.Native.Bindings/runtimes/win-arm64/native/osu.Native.dll

      - name: Add linux-x64
        uses: actions/download-artifact@v4
        with:
          name: linux-x64
          path: Bindings/CSharp/osu.Native.Bindings/runtimes/linux-x64/native/osu.Native.so

      - name: Add osx-x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: osx-x64
          path: Bindings/CSharp/osu.Native.Bindings/runtimes/osx-x64/native/osu.Native.dylib

      - name: Add osx-arm64
        uses: actions/download-artifact@v4
        with:
          name: osx-arm64
          path: Bindings/CSharp/osu.Native.Bindings/runtimes/osx-arm64/native/osu.Native.dylib

      - name: Pack
        run: dotnet pack -c Release Bindings/CSharp/osu.Native.Bindings/osu.Native.Bindings.csproj /p:Version=${{ github.ref_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: osu.Native.Bindings.nupkg
          path: Bindings/CSharp/osu.Native.Bindings/bin/Release/*.nupkg

      - name: Publish
        run: dotnet nuget push Bindings/CSharp/osu.Native.Bindings/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --source https://api.nuget.org/v3/index.json
  
  build-wasm:
    name: Build (WASM)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          
      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Install WASM experimental tools
        run: dotnet workload install wasm-experimental
      
      - name: Build
        run: dotnet publish -c Release Sources/osu.Native.WebAssembly/osu.Native.WebAssembly.csproj

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: _framework
          path: Sources/osu.Native.WebAssembly/bin/Release/net8.0/publish/wwwroot/_framework

  pack-wasm:
    name: Pack (WASM)
    needs: build-wasm
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Add _framework
        uses: actions/download-artifact@v4
        with:
          name: _framework
          path: Bindings/JS/_framework

      - name: Run build
        working-directory: ./Bindings/JS
        run: npm run build

      - name: Set version
        working-directory: ./Bindings/JS
        run: npm version ${{ github.ref_name }}

      - name: Publish
        working-directory: ./Bindings/JS
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
